/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.EmployeeRole;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JFrame;

/**
 *
 * @author DELL
 */
public class PurchaseProduct extends javax.swing.JFrame implements Loop {

    /**
     * Creates new form PurchaseProduct
     */
    EmployeeRole emp;
    Loop parent;

    public PurchaseProduct(EmployeeRole emp) {
        initComponents();
        this.emp = emp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Purchase = new javax.swing.JButton();
        productID = new javax.swing.JTextField();
        customerSSN = new javax.swing.JTextField();
        purchaseDate = new com.toedter.calendar.JDateChooser();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(153, 204, 255));
        jLabel1.setText("  CustomerSSN");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setOpaque(true);

        jLabel2.setBackground(new java.awt.Color(153, 204, 255));
        jLabel2.setText("    Product ID");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel2.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(153, 204, 255));
        jLabel3.setText("   Purchase Date");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.setOpaque(true);

        Purchase.setBackground(new java.awt.Color(0, 0, 0));
        Purchase.setForeground(new java.awt.Color(255, 255, 255));
        Purchase.setText("Purchase");
        Purchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurchaseActionPerformed(evt);
            }
        });

        productID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(productID, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(purchaseDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(Purchase)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(customerSSN))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(Purchase, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(productID)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(purchaseDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseActionPerformed
        if (productID.getText().isEmpty() || customerSSN.getText().isEmpty() || purchaseDate.getDate() == null) {
            this.setVisible(false);//check if any text field is empty, close the window to show a warning message then open it again when it's closed
            JOptionPane.showMessageDialog(null, "Some fields are empty");
            productID.setText("");
            customerSSN.setText("");
            purchaseDate.setDate(null);

            this.setVisible(true);
        } else {
            boolean x = true;
            try {
                int m = Integer.parseInt(productID.getText().trim());
            } catch (Exception ex) {
                this.setVisible(false);//close addproduct window to show the following text

                JOptionPane.showMessageDialog(null, "You should enter a numeric value in the field whose name is \"product Id\" ");
                x = false;
                productID.setText("");
                customerSSN.setText("");
                purchaseDate.setDate(null);
                this.setVisible(true);
            }
            try {
                float n = Integer.parseInt(customerSSN.getText().trim());
            } catch (Exception ex) {
                this.setVisible(false);//close addproduct window to show the following text
                x = false;
                JOptionPane.showMessageDialog(null, "You should enter a numeric value in the field whose name is \"customer SSN\" ");
                productID.setText("");
                customerSSN.setText("");
                purchaseDate.setDate(null);
                this.setVisible(true);
            }
            if (x) {
                try {
                    if (!(emp.contains(productID.getText().trim()))) {//check if the id is existed
                        this.setVisible(false);//close addproduct window to show the following text
                        JOptionPane.showMessageDialog(null, "The product with id:" + productID.getText() + " doesn't exists");
                    } else {
                        if (emp.purchaseProduct(customerSSN.getText().trim(), productID.getText().trim(), purchaseDate.getDate().toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate())) {
                            this.setVisible(false);
                            JOptionPane.showMessageDialog(null, "The customer with SSN:" + customerSSN.getText() + "purchased the product with id:" + productID.getText() + " has been successfully Purchased");
                        } else {
                            this.setVisible(false);//close addproduct window to show the following text

                            JOptionPane.showMessageDialog(null, "All items of the product with id:" + productID.getText() + " have been Finished and no item is left for the customer");
                        }
                    }
                } catch (IOException ex) {
                    this.setVisible(false);//close addproduct window to show the following text

                    JOptionPane.showMessageDialog(null, "An error occuired while entering data");//if an error happened while reading data from file for adminrole class
                }
                productID.setText("");
                customerSSN.setText("");
                purchaseDate.setDate(null);
                this.setVisible(true);
            }
        }
    }//GEN-LAST:event_PurchaseActionPerformed

    private void productIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productIDActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
        ((JFrame) getParentLoop()).setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Purchase;
    private javax.swing.JTextField customerSSN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField productID;
    private com.toedter.calendar.JDateChooser purchaseDate;
    // End of variables declaration//GEN-END:variables

    @Override
    public Loop getParentLoop() {
        return this.parent;
    }

    @Override
    public void setParentLoop(Loop loop) {
        this.parent = loop;
    }
}
